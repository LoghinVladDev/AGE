//
// Created by Vlad-Andrei Loghin on 18.06.23.
//

#pragma once

#include <QAction>
#include <QCommon>
#include <QMouseEvent>
#include <QPaintDevice>
#include <QPalette>

struct QPaintEvent;

struct QWidget : QPaintDevice, QObject {
  auto resize(int, int) const noexcept -> void {
    // empty on purpose
  }
  auto show() const noexcept -> void {
    // empty on purpose
  }
  explicit QWidget(QWidget* = nullptr) {}
  virtual ~QWidget() noexcept = default;
  virtual auto mousePressEvent(QMouseEvent*) -> void {
      // empty on purpose
  }
  virtual auto mouseMoveEvent(QMouseEvent*) -> void {
      // empty on purpose
  }
  virtual auto mouseReleaseEvent(QMouseEvent*) -> void {
      // empty on purpose
  }
  auto move(QPoint const&) const noexcept -> void {
    // empty on purpose
  }
  auto move(int, int) const noexcept -> void {
    // empty on purpose
  }
  virtual auto paintEvent(QPaintEvent*) -> void {
    // empty on purpose
  }
  auto setPalette(QPalette const &) const noexcept -> void {
    // empty on purpose
  }
  auto palette() const noexcept -> QPalette const & { return _defaultPalette; }
  auto backgroundRole() const noexcept -> QPalette::ColorRole { return QPalette::_unused; }
  auto mapToParent(QPointF const&) const -> QPointF { return {}; }
  auto mapToParent(QPoint const&) const -> QPoint { return {}; }
  auto mapToGlobal(QPoint const&) const -> QPoint { return {}; }
  auto mapToGlobal(QPointF const&) const -> QPointF { return {}; }
  auto raise() const {
    // empty on purpose
  }
private:
  static inline QPalette _defaultPalette;
};
